<% layout('layout') %>
    <div class="container mt-5">
        <form id="analysisForm">
            <div class="mb-3">
                <label for="textInput" class="form-label">Text</label>
                <textarea type="text" class="form-control" id="text-input" rows="15" id="textInput"
                    placeholder="Enter your text here"> </textarea>
            </div>
            <div class="mb-3">
                <label for="fileUpload" class="form-label">File (txt)</label>
                <input type="file" class="form-control" id="file-input">
            </div>
            <button type="submit" class="btn btn-primary" id="submit-btn">Submit</button>
        </form>
        <div id="file_holder"></div>
    </div>
    <script>
        function readFileAsText(file) {
            return new Promise((resolve, reject) => {
                const reader = new FileReader();
                reader.onload = event => resolve(event.target.result);
                reader.onerror = error => reject(error);
                reader.readAsText(file);
            });
        }
        function createLinks(name) {
            // Create an array of link objects
            var links = [
                {href: `/json/${name}.json`, text: "JSON"},
                {href: `/csv/${name}_nodes.csv`, text: "NODES csv"},
                {href: `/csv/${name}_rels.csv`, text: "RELS csv"}
            ];
            const backBtn = $("<a>").attr("href", "/").attr("class", "btn btn-primary").text("Tiếp tục")
            // Iterate over the links array
            $.each(links, function (index, link) {
                // Create a new <a> element
                var $a = $("<a>")
                    .attr("href", link.href)
                    .attr("class", "list-group-item")
                    .text(link.text);

                // Append the <a> element to the div with id 'file_holder'
                $("#file_holder").append($a);
            });
            $("#file_holder").append(backBtn)
        }

        $(document).ready(() => {
            const $form = $("#analysisForm");
            const $fileInput = $("#file-input");
            const $textInput = $("#text-input");
            const maxSize = 10 * 1024 * 1024; // 10MB in bytes

            $form.on("submit", async (e) => {
                e.preventDefault();
                $("#submit-btn").html(`<div class="spinner-border text-light" role="status">
                    <span class="visually-hidden">Loading...</span>
                  </div>`)
                $("#submit-btn").attr("class", "btn btn-primary disabled")
                const file = $fileInput[0].files[0];
                let text;

                if (file) {
                    if (file.size > maxSize) {
                        alert("File size exceeds 10MB limit.");
                        return;
                    }

                    if (file.type !== "text/plain") {
                        alert("Only .txt files are allowed.");
                        return;
                    }

                    try {
                        text = await readFileAsText(file);
                    } catch (error) {
                        console.error("Error reading file:", error);
                        alert("Error processing file. Please try again.");
                        return;
                    }
                } else {
                    text = $textInput.val().trim();
                    if (!text) {
                        alert("Please enter text or upload a file.");
                        return;
                    }
                }

                try {
                    const response = await axios.post('/analyze', {text: text});
                    if (response.status == 200) {
                        alert("Success")
                        $form.hide()
                        createLinks(response.data.uuid)
                    }
                    // Handle the response as needed
                } catch (error) {
                    console.error("Error sending data to server:", error);
                    alert("Error analyzing data. Please try again.");
                }
            });
        });
    </script>